// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_mset.proto

#include "google/protobuf/unittest_mset.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fmset_5fwire_5fformat_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestMessageSet_google_2fprotobuf_2funittest_5fmset_5fwire_5fformat_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fmset_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RawMessageSet_Item_google_2fprotobuf_2funittest_5fmset_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fmset_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestMessageSetExtension1_google_2fprotobuf_2funittest_5fmset_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2funittest_5fmset_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestMessageSetExtension2_google_2fprotobuf_2funittest_5fmset_2eproto;
namespace protobuf_unittest {
class TestMessageSetContainerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestMessageSetContainer> _instance;
} _TestMessageSetContainer_default_instance_;
class TestMessageSetExtension1DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestMessageSetExtension1> _instance;
} _TestMessageSetExtension1_default_instance_;
class TestMessageSetExtension2DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestMessageSetExtension2> _instance;
} _TestMessageSetExtension2_default_instance_;
class RawMessageSet_ItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RawMessageSet_Item> _instance;
} _RawMessageSet_Item_default_instance_;
class RawMessageSetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RawMessageSet> _instance;
} _RawMessageSet_default_instance_;
}  // namespace protobuf_unittest
static void InitDefaultsscc_info_RawMessageSet_google_2fprotobuf_2funittest_5fmset_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_RawMessageSet_default_instance_;
    new (ptr) ::protobuf_unittest::RawMessageSet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::RawMessageSet::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RawMessageSet_google_2fprotobuf_2funittest_5fmset_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RawMessageSet_google_2fprotobuf_2funittest_5fmset_2eproto}, {
      &scc_info_RawMessageSet_Item_google_2fprotobuf_2funittest_5fmset_2eproto.base,}};

static void InitDefaultsscc_info_RawMessageSet_Item_google_2fprotobuf_2funittest_5fmset_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_RawMessageSet_Item_default_instance_;
    new (ptr) ::protobuf_unittest::RawMessageSet_Item();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::RawMessageSet_Item::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RawMessageSet_Item_google_2fprotobuf_2funittest_5fmset_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RawMessageSet_Item_google_2fprotobuf_2funittest_5fmset_2eproto}, {}};

static void InitDefaultsscc_info_TestMessageSetContainer_google_2fprotobuf_2funittest_5fmset_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_TestMessageSetContainer_default_instance_;
    new (ptr) ::protobuf_unittest::TestMessageSetContainer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::TestMessageSetContainer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestMessageSetContainer_google_2fprotobuf_2funittest_5fmset_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TestMessageSetContainer_google_2fprotobuf_2funittest_5fmset_2eproto}, {
      &scc_info_TestMessageSet_google_2fprotobuf_2funittest_5fmset_5fwire_5fformat_2eproto.base,}};

static void InitDefaultsscc_info_TestMessageSetExtension1_google_2fprotobuf_2funittest_5fmset_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_TestMessageSetExtension1_default_instance_;
    new (ptr) ::protobuf_unittest::TestMessageSetExtension1();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::TestMessageSetExtension1::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TestMessageSetExtension1_google_2fprotobuf_2funittest_5fmset_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TestMessageSetExtension1_google_2fprotobuf_2funittest_5fmset_2eproto}, {
      &scc_info_TestMessageSet_google_2fprotobuf_2funittest_5fmset_5fwire_5fformat_2eproto.base,}};

static void InitDefaultsscc_info_TestMessageSetExtension2_google_2fprotobuf_2funittest_5fmset_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::protobuf_unittest::_TestMessageSetExtension2_default_instance_;
    new (ptr) ::protobuf_unittest::TestMessageSetExtension2();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf_unittest::TestMessageSetExtension2::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestMessageSetExtension2_google_2fprotobuf_2funittest_5fmset_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestMessageSetExtension2_google_2fprotobuf_2funittest_5fmset_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fprotobuf_2funittest_5fmset_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fprotobuf_2funittest_5fmset_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fprotobuf_2funittest_5fmset_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetContainer, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetContainer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetContainer, message_set_),
  0,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetExtension1, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetExtension1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetExtension1, i_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetExtension1, recursive_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetExtension1, test_aliasing_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetExtension2, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetExtension2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::TestMessageSetExtension2, str_),
  0,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RawMessageSet_Item, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RawMessageSet_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RawMessageSet_Item, type_id_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RawMessageSet_Item, message_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RawMessageSet, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RawMessageSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::protobuf_unittest::RawMessageSet, item_),
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::protobuf_unittest::TestMessageSetContainer)},
  { 7, 15, sizeof(::protobuf_unittest::TestMessageSetExtension1)},
  { 18, 24, sizeof(::protobuf_unittest::TestMessageSetExtension2)},
  { 25, 32, sizeof(::protobuf_unittest::RawMessageSet_Item)},
  { 34, 40, sizeof(::protobuf_unittest::RawMessageSet)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_TestMessageSetContainer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_TestMessageSetExtension1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_TestMessageSetExtension2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_RawMessageSet_Item_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::protobuf_unittest::_RawMessageSet_default_instance_),
};

const char descriptor_table_protodef_google_2fprotobuf_2funittest_5fmset_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#google/protobuf/unittest_mset.proto\022\021p"
  "rotobuf_unittest\032/google/protobuf/unitte"
  "st_mset_wire_format.proto\"Z\n\027TestMessage"
  "SetContainer\022\?\n\013message_set\030\001 \001(\0132*.prot"
  "o2_wireformat_unittest.TestMessageSet\"\371\001"
  "\n\030TestMessageSetExtension1\022\t\n\001i\030\017 \001(\005\022=\n"
  "\trecursive\030\020 \001(\0132*.proto2_wireformat_uni"
  "ttest.TestMessageSet\022\031\n\rtest_aliasing\030\021 "
  "\001(\tB\002\010\0022x\n\025message_set_extension\022*.proto"
  "2_wireformat_unittest.TestMessageSet\030\260\246^"
  " \001(\0132+.protobuf_unittest.TestMessageSetE"
  "xtension1\"\241\001\n\030TestMessageSetExtension2\022\013"
  "\n\003str\030\031 \001(\t2x\n\025message_set_extension\022*.p"
  "roto2_wireformat_unittest.TestMessageSet"
  "\030\371\273^ \001(\0132+.protobuf_unittest.TestMessage"
  "SetExtension2\"n\n\rRawMessageSet\0223\n\004item\030\001"
  " \003(\n2%.protobuf_unittest.RawMessageSet.I"
  "tem\032(\n\004Item\022\017\n\007type_id\030\002 \002(\005\022\017\n\007message\030"
  "\003 \002(\014B\005H\001\370\001\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2funittest_5fmset_5fwire_5fformat_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto_sccs[5] = {
  &scc_info_RawMessageSet_google_2fprotobuf_2funittest_5fmset_2eproto.base,
  &scc_info_RawMessageSet_Item_google_2fprotobuf_2funittest_5fmset_2eproto.base,
  &scc_info_TestMessageSetContainer_google_2fprotobuf_2funittest_5fmset_2eproto.base,
  &scc_info_TestMessageSetExtension1_google_2fprotobuf_2funittest_5fmset_2eproto.base,
  &scc_info_TestMessageSetExtension2_google_2fprotobuf_2funittest_5fmset_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto_once;
static bool descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto = {
  &descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto_initialized, descriptor_table_protodef_google_2fprotobuf_2funittest_5fmset_2eproto, "google/protobuf/unittest_mset.proto", 732,
  &descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto_once, descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto_sccs, descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_google_2fprotobuf_2funittest_5fmset_2eproto::offsets,
  file_level_metadata_google_2fprotobuf_2funittest_5fmset_2eproto, 5, file_level_enum_descriptors_google_2fprotobuf_2funittest_5fmset_2eproto, file_level_service_descriptors_google_2fprotobuf_2funittest_5fmset_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fprotobuf_2funittest_5fmset_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fprotobuf_2funittest_5fmset_2eproto), true);
namespace protobuf_unittest {

// ===================================================================

void TestMessageSetContainer::InitAsDefaultInstance() {
  ::protobuf_unittest::_TestMessageSetContainer_default_instance_._instance.get_mutable()->message_set_ = const_cast< ::proto2_wireformat_unittest::TestMessageSet*>(
      ::proto2_wireformat_unittest::TestMessageSet::internal_default_instance());
}
class TestMessageSetContainer::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMessageSetContainer>()._has_bits_);
  static const ::proto2_wireformat_unittest::TestMessageSet& message_set(const TestMessageSetContainer* msg);
  static void set_has_message_set(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto2_wireformat_unittest::TestMessageSet&
TestMessageSetContainer::_Internal::message_set(const TestMessageSetContainer* msg) {
  return *msg->message_set_;
}
void TestMessageSetContainer::unsafe_arena_set_allocated_message_set(
    ::proto2_wireformat_unittest::TestMessageSet* message_set) {
  if (GetArenaNoVirtual() == nullptr) {
    delete message_set_;
  }
  message_set_ = message_set;
  if (message_set) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMessageSetContainer.message_set)
}
void TestMessageSetContainer::clear_message_set() {
  if (message_set_ != nullptr) message_set_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
TestMessageSetContainer::TestMessageSetContainer()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMessageSetContainer)
}
TestMessageSetContainer::TestMessageSetContainer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMessageSetContainer)
}
TestMessageSetContainer::TestMessageSetContainer(const TestMessageSetContainer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_message_set()) {
    message_set_ = new ::proto2_wireformat_unittest::TestMessageSet(*from.message_set_);
  } else {
    message_set_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMessageSetContainer)
}

void TestMessageSetContainer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestMessageSetContainer_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  message_set_ = nullptr;
}

TestMessageSetContainer::~TestMessageSetContainer() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMessageSetContainer)
  SharedDtor();
}

void TestMessageSetContainer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete message_set_;
}

void TestMessageSetContainer::ArenaDtor(void* object) {
  TestMessageSetContainer* _this = reinterpret_cast< TestMessageSetContainer* >(object);
  (void)_this;
}
void TestMessageSetContainer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TestMessageSetContainer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestMessageSetContainer& TestMessageSetContainer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestMessageSetContainer_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  return *internal_default_instance();
}


void TestMessageSetContainer::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMessageSetContainer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(message_set_ != nullptr);
    message_set_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TestMessageSetContainer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .proto2_wireformat_unittest.TestMessageSet message_set = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_message_set(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestMessageSetContainer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMessageSetContainer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto2_wireformat_unittest.TestMessageSet message_set = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::message_set(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMessageSetContainer)
  return target;
}

size_t TestMessageSetContainer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMessageSetContainer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .proto2_wireformat_unittest.TestMessageSet message_set = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_set_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestMessageSetContainer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestMessageSetContainer)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessageSetContainer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestMessageSetContainer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestMessageSetContainer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestMessageSetContainer)
    MergeFrom(*source);
  }
}

void TestMessageSetContainer::MergeFrom(const TestMessageSetContainer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMessageSetContainer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_message_set()) {
    _internal_mutable_message_set()->::proto2_wireformat_unittest::TestMessageSet::MergeFrom(from._internal_message_set());
  }
}

void TestMessageSetContainer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestMessageSetContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetContainer::CopyFrom(const TestMessageSetContainer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMessageSetContainer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageSetContainer::IsInitialized() const {
  if (_internal_has_message_set()) {
    if (!message_set_->IsInitialized()) return false;
  }
  return true;
}

void TestMessageSetContainer::InternalSwap(TestMessageSetContainer* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(message_set_, other->message_set_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestMessageSetContainer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestMessageSetExtension1::InitAsDefaultInstance() {
  ::protobuf_unittest::_TestMessageSetExtension1_default_instance_._instance.get_mutable()->recursive_ = const_cast< ::proto2_wireformat_unittest::TestMessageSet*>(
      ::proto2_wireformat_unittest::TestMessageSet::internal_default_instance());
}
class TestMessageSetExtension1::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMessageSetExtension1>()._has_bits_);
  static void set_has_i(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::proto2_wireformat_unittest::TestMessageSet& recursive(const TestMessageSetExtension1* msg);
  static void set_has_recursive(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_test_aliasing(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::proto2_wireformat_unittest::TestMessageSet&
TestMessageSetExtension1::_Internal::recursive(const TestMessageSetExtension1* msg) {
  return *msg->recursive_;
}
void TestMessageSetExtension1::unsafe_arena_set_allocated_recursive(
    ::proto2_wireformat_unittest::TestMessageSet* recursive) {
  if (GetArenaNoVirtual() == nullptr) {
    delete recursive_;
  }
  recursive_ = recursive;
  if (recursive) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf_unittest.TestMessageSetExtension1.recursive)
}
void TestMessageSetExtension1::clear_recursive() {
  if (recursive_ != nullptr) recursive_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
TestMessageSetExtension1::TestMessageSetExtension1()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMessageSetExtension1)
}
TestMessageSetExtension1::TestMessageSetExtension1(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMessageSetExtension1)
}
TestMessageSetExtension1::TestMessageSetExtension1(const TestMessageSetExtension1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  test_aliasing_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_test_aliasing()) {
    test_aliasing_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_test_aliasing(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_recursive()) {
    recursive_ = new ::proto2_wireformat_unittest::TestMessageSet(*from.recursive_);
  } else {
    recursive_ = nullptr;
  }
  i_ = from.i_;
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMessageSetExtension1)
}

void TestMessageSetExtension1::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestMessageSetExtension1_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  test_aliasing_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&recursive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&recursive_)) + sizeof(i_));
}

TestMessageSetExtension1::~TestMessageSetExtension1() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMessageSetExtension1)
  SharedDtor();
}

void TestMessageSetExtension1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  test_aliasing_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete recursive_;
}

void TestMessageSetExtension1::ArenaDtor(void* object) {
  TestMessageSetExtension1* _this = reinterpret_cast< TestMessageSetExtension1* >(object);
  (void)_this;
}
void TestMessageSetExtension1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TestMessageSetExtension1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestMessageSetExtension1& TestMessageSetExtension1::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestMessageSetExtension1_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  return *internal_default_instance();
}


void TestMessageSetExtension1::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMessageSetExtension1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      test_aliasing_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(recursive_ != nullptr);
      recursive_->Clear();
    }
  }
  i_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TestMessageSetExtension1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 i = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_i(&has_bits);
          i_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .proto2_wireformat_unittest.TestMessageSet recursive = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_recursive(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string test_aliasing = 17 [ctype = STRING_PIECE];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_test_aliasing();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf_unittest.TestMessageSetExtension1.test_aliasing");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestMessageSetExtension1::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMessageSetExtension1)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 i = 15;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_i(), target);
  }

  // optional .proto2_wireformat_unittest.TestMessageSet recursive = 16;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::recursive(this), target, stream);
  }

  // optional string test_aliasing = 17 [ctype = STRING_PIECE];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_test_aliasing().data(), static_cast<int>(this->_internal_test_aliasing().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestMessageSetExtension1.test_aliasing");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_test_aliasing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMessageSetExtension1)
  return target;
}

size_t TestMessageSetExtension1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMessageSetExtension1)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string test_aliasing = 17 [ctype = STRING_PIECE];
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_test_aliasing());
    }

    // optional .proto2_wireformat_unittest.TestMessageSet recursive = 16;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *recursive_);
    }

    // optional int32 i = 15;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_i());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestMessageSetExtension1::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestMessageSetExtension1)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessageSetExtension1* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestMessageSetExtension1>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestMessageSetExtension1)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestMessageSetExtension1)
    MergeFrom(*source);
  }
}

void TestMessageSetExtension1::MergeFrom(const TestMessageSetExtension1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMessageSetExtension1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_test_aliasing(from._internal_test_aliasing());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_recursive()->::proto2_wireformat_unittest::TestMessageSet::MergeFrom(from._internal_recursive());
    }
    if (cached_has_bits & 0x00000004u) {
      i_ = from.i_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TestMessageSetExtension1::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestMessageSetExtension1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetExtension1::CopyFrom(const TestMessageSetExtension1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMessageSetExtension1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageSetExtension1::IsInitialized() const {
  if (_internal_has_recursive()) {
    if (!recursive_->IsInitialized()) return false;
  }
  return true;
}

void TestMessageSetExtension1::InternalSwap(TestMessageSetExtension1* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  test_aliasing_.Swap(&other->test_aliasing_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(recursive_, other->recursive_);
  swap(i_, other->i_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestMessageSetExtension1::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestMessageSetExtension2::InitAsDefaultInstance() {
}
class TestMessageSetExtension2::_Internal {
 public:
  using HasBits = decltype(std::declval<TestMessageSetExtension2>()._has_bits_);
  static void set_has_str(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TestMessageSetExtension2::TestMessageSetExtension2()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.TestMessageSetExtension2)
}
TestMessageSetExtension2::TestMessageSetExtension2(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.TestMessageSetExtension2)
}
TestMessageSetExtension2::TestMessageSetExtension2(const TestMessageSetExtension2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_str()) {
    str_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_str(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.TestMessageSetExtension2)
}

void TestMessageSetExtension2::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TestMessageSetExtension2_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TestMessageSetExtension2::~TestMessageSetExtension2() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.TestMessageSetExtension2)
  SharedDtor();
}

void TestMessageSetExtension2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TestMessageSetExtension2::ArenaDtor(void* object) {
  TestMessageSetExtension2* _this = reinterpret_cast< TestMessageSetExtension2* >(object);
  (void)_this;
}
void TestMessageSetExtension2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TestMessageSetExtension2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestMessageSetExtension2& TestMessageSetExtension2::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestMessageSetExtension2_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  return *internal_default_instance();
}


void TestMessageSetExtension2::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.TestMessageSetExtension2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    str_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TestMessageSetExtension2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string str = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          auto str = _internal_mutable_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "protobuf_unittest.TestMessageSetExtension2.str");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestMessageSetExtension2::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.TestMessageSetExtension2)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string str = 25;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_str().data(), static_cast<int>(this->_internal_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "protobuf_unittest.TestMessageSetExtension2.str");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.TestMessageSetExtension2)
  return target;
}

size_t TestMessageSetExtension2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.TestMessageSetExtension2)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string str = 25;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_str());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestMessageSetExtension2::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.TestMessageSetExtension2)
  GOOGLE_DCHECK_NE(&from, this);
  const TestMessageSetExtension2* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestMessageSetExtension2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.TestMessageSetExtension2)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.TestMessageSetExtension2)
    MergeFrom(*source);
  }
}

void TestMessageSetExtension2::MergeFrom(const TestMessageSetExtension2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.TestMessageSetExtension2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_str()) {
    _internal_set_str(from._internal_str());
  }
}

void TestMessageSetExtension2::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.TestMessageSetExtension2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetExtension2::CopyFrom(const TestMessageSetExtension2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.TestMessageSetExtension2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestMessageSetExtension2::IsInitialized() const {
  return true;
}

void TestMessageSetExtension2::InternalSwap(TestMessageSetExtension2* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  str_.Swap(&other->str_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TestMessageSetExtension2::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RawMessageSet_Item::InitAsDefaultInstance() {
}
class RawMessageSet_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<RawMessageSet_Item>()._has_bits_);
  static void set_has_type_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_message(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RawMessageSet_Item::RawMessageSet_Item()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.RawMessageSet.Item)
}
RawMessageSet_Item::RawMessageSet_Item(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.RawMessageSet.Item)
}
RawMessageSet_Item::RawMessageSet_Item(const RawMessageSet_Item& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_message()) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message(),
      GetArenaNoVirtual());
  }
  type_id_ = from.type_id_;
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RawMessageSet.Item)
}

void RawMessageSet_Item::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RawMessageSet_Item_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_id_ = 0;
}

RawMessageSet_Item::~RawMessageSet_Item() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RawMessageSet.Item)
  SharedDtor();
}

void RawMessageSet_Item::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RawMessageSet_Item::ArenaDtor(void* object) {
  RawMessageSet_Item* _this = reinterpret_cast< RawMessageSet_Item* >(object);
  (void)_this;
}
void RawMessageSet_Item::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RawMessageSet_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RawMessageSet_Item& RawMessageSet_Item::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RawMessageSet_Item_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  return *internal_default_instance();
}


void RawMessageSet_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RawMessageSet.Item)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    message_.ClearNonDefaultToEmpty();
  }
  type_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* RawMessageSet_Item::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required int32 type_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_type_id(&has_bits);
          type_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required bytes message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RawMessageSet_Item::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RawMessageSet.Item)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_type_id(), target);
  }

  // required bytes message = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RawMessageSet.Item)
  return target;
}

size_t RawMessageSet_Item::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:protobuf_unittest.RawMessageSet.Item)
  size_t total_size = 0;

  if (_internal_has_message()) {
    // required bytes message = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  if (_internal_has_type_id()) {
    // required int32 type_id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type_id());
  }

  return total_size;
}
size_t RawMessageSet_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RawMessageSet.Item)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes message = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());

    // required int32 type_id = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawMessageSet_Item::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.RawMessageSet.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const RawMessageSet_Item* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RawMessageSet_Item>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.RawMessageSet.Item)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.RawMessageSet.Item)
    MergeFrom(*source);
  }
}

void RawMessageSet_Item::MergeFrom(const RawMessageSet_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RawMessageSet.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_message(from._internal_message());
    }
    if (cached_has_bits & 0x00000002u) {
      type_id_ = from.type_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RawMessageSet_Item::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.RawMessageSet.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawMessageSet_Item::CopyFrom(const RawMessageSet_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RawMessageSet.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawMessageSet_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RawMessageSet_Item::InternalSwap(RawMessageSet_Item* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_id_, other->type_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RawMessageSet_Item::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RawMessageSet::InitAsDefaultInstance() {
}
class RawMessageSet::_Internal {
 public:
  using HasBits = decltype(std::declval<RawMessageSet>()._has_bits_);
};

RawMessageSet::RawMessageSet()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf_unittest.RawMessageSet)
}
RawMessageSet::RawMessageSet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  item_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf_unittest.RawMessageSet)
}
RawMessageSet::RawMessageSet(const RawMessageSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:protobuf_unittest.RawMessageSet)
}

void RawMessageSet::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RawMessageSet_google_2fprotobuf_2funittest_5fmset_2eproto.base);
}

RawMessageSet::~RawMessageSet() {
  // @@protoc_insertion_point(destructor:protobuf_unittest.RawMessageSet)
  SharedDtor();
}

void RawMessageSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void RawMessageSet::ArenaDtor(void* object) {
  RawMessageSet* _this = reinterpret_cast< RawMessageSet* >(object);
  (void)_this;
}
void RawMessageSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RawMessageSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RawMessageSet& RawMessageSet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RawMessageSet_google_2fprotobuf_2funittest_5fmset_2eproto.base);
  return *internal_default_instance();
}


void RawMessageSet::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf_unittest.RawMessageSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* RawMessageSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated group Item = 1 { ... };
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 11)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseGroup(_internal_add_item(), ptr, 11);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<11>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RawMessageSet::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:protobuf_unittest.RawMessageSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated group Item = 1 { ... };
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_item_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteGroup(1, this->_internal_item(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf_unittest.RawMessageSet)
  return target;
}

size_t RawMessageSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf_unittest.RawMessageSet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated group Item = 1 { ... };
  total_size += 2UL * this->_internal_item_size();
  for (const auto& msg : this->item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GroupSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawMessageSet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf_unittest.RawMessageSet)
  GOOGLE_DCHECK_NE(&from, this);
  const RawMessageSet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RawMessageSet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf_unittest.RawMessageSet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf_unittest.RawMessageSet)
    MergeFrom(*source);
  }
}

void RawMessageSet::MergeFrom(const RawMessageSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf_unittest.RawMessageSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void RawMessageSet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf_unittest.RawMessageSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawMessageSet::CopyFrom(const RawMessageSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf_unittest.RawMessageSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawMessageSet::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(item_)) return false;
  return true;
}

void RawMessageSet::InternalSwap(RawMessageSet* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_.InternalSwap(&other->item_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RawMessageSet::GetMetadata() const {
  return GetMetadataStatic();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessageSetExtension1::kMessageSetExtensionFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::proto2_wireformat_unittest::TestMessageSet,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension1 >, 11, false >
  TestMessageSetExtension1::message_set_extension(kMessageSetExtensionFieldNumber, *::protobuf_unittest::TestMessageSetExtension1::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestMessageSetExtension2::kMessageSetExtensionFieldNumber;
#endif
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::proto2_wireformat_unittest::TestMessageSet,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension2 >, 11, false >
  TestMessageSetExtension2::message_set_extension(kMessageSetExtensionFieldNumber, *::protobuf_unittest::TestMessageSetExtension2::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf_unittest
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMessageSetContainer* Arena::CreateMaybeMessage< ::protobuf_unittest::TestMessageSetContainer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMessageSetContainer >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMessageSetExtension1* Arena::CreateMaybeMessage< ::protobuf_unittest::TestMessageSetExtension1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMessageSetExtension1 >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::TestMessageSetExtension2* Arena::CreateMaybeMessage< ::protobuf_unittest::TestMessageSetExtension2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::TestMessageSetExtension2 >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::RawMessageSet_Item* Arena::CreateMaybeMessage< ::protobuf_unittest::RawMessageSet_Item >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::RawMessageSet_Item >(arena);
}
template<> PROTOBUF_NOINLINE ::protobuf_unittest::RawMessageSet* Arena::CreateMaybeMessage< ::protobuf_unittest::RawMessageSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::protobuf_unittest::RawMessageSet >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
